image: ubuntu:22.04

definitions:
  steps:
    - step: &npmDev
        name: Build Development Assets
        image: node:20
        caches:
          - node
        script:
          - npm install
          - npm run build
          - npm run ag-build
        artifacts:
          - build/**
          - node_modules/**
          - public/**
          - resources/async/**
    - step: &composer
        name: Install composer packages
        image: php:8.2
        script:
          - apt-get update && apt-get install -y zip libzip-dev git ssh rsync libfreetype6-dev libjpeg62-turbo-dev libpng-dev libwebp-dev zlib1g-dev git libpq-dev libmagickwand-dev
          - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
          - docker-php-ext-configure gd --with-jpeg --with-webp
          - docker-php-ext-install -j$(nproc) pdo_pgsql pcntl gd exif bcmath zip imagick zip soap
          - pecl install -o -f redis && docker-php-ext-enable redis
          - pecl install -o -f imagick && docker-php-ext-enable imagick
          - composer install --no-ansi --no-dev --no-interaction --no-plugins --no-progress --no-scripts --optimize-autoloader
        caches:
          - composer
        artifacts:
          - vendor/**
    - step: &deployDevelopment
        name: Deploy Application to the Development server
        deployment: Staging
        script:
          - apt-get update && apt-get install -y zip git ssh rsync
          - mkdir -p ~/.ssh
          - ssh-keyscan -t rsa $SERVER_IP > ~/.ssh/known_hosts
          - (umask  077 ; echo $SSH_VARIABLE | base64 --decode > ~/.ssh/id_rsa)
          - bash deploy.sh
    - step: &deployStaging
        name: Deploy Application to the Development server
        deployment: Production
        script:
          - apt-get update && apt-get install -y zip git ssh rsync
          - mkdir -p ~/.ssh
          - ssh-keyscan $SERVER_BASTION_IP > ~/.ssh/known_hosts
          - (umask  077 ; echo $SSH_VARIABLE | base64 --decode > ~/.ssh/id_rsa)
          - ssh -i "~/.ssh/id_rsa" $REMOTE_USER@$SERVER_BASTION_IP ssh-keyscan $SERVER_IP > ~/.ssh/known_hosts
          - bash deploy.sh
pipelines:
  branches:
    develop:
      - parallel:
          - step: *npmDev
          - step: *composer
      - step: *deployDevelopment
    staging:
      - parallel:
          - step: *npmDev
          - step: *composer
      - step: *deployStaging
